mixin teamBlock(className, team, isFinals, seedNum)
	.slot(class=className)
			if(team)
				img(src=`https://cdn.nba.net/assets/logos/teams/secondary/web/${team.Abbreviation}.svg`)
			else 
				span= '-'
	
mixin box(series, teams, roundNum, conf, mobile)
	- var lowSeedId = series.topRow.teamId;
	- var highSeedId = series.bottomRow.teamId;
	- var low = teams[lowSeedId];
	- var high = teams[highSeedId];
	div(class='box ' + roundNum)
		if (series.confName === 'NBA Finals')
			.slot(class='top')
				if(low)
					img(src=`https://cdn.nba.net/assets/logos/teams/secondary/web/${low.Abbreviation}.svg`)
				else 
					span= '-'
			.slot(class='bottom')
				if(high)
					img(src=`https://cdn.nba.net/assets/logos/teams/secondary/web/${high.Abbreviation}.svg`)
				else 
					span= '-'
		else 
			table
				tr
					td
						if (low)
							img(src=`https://cdn.nba.net/assets/logos/teams/secondary/web/${low.Abbreviation}.svg`)
						else
							.placeholder
					td vs.
					td
						if (high)
							img(src=`https://cdn.nba.net/assets/logos/teams/secondary/web/${high.Abbreviation}.svg`)
						else 
							.placeholder
		.summary
			if (series.seriesSummary !== '-')
				- var href = 'https://nba.com/playoffs/' +  (selectedSeason + 1) + '/' + series.seriesKey;
				a(href=href target="_blank") #{series.seriesSummary}
			else 
				=series.seriesSummary
		if (series.isGameLive)
			.live-now Live now

html
	head
		title= title
		link(rel='stylesheet' href='/assets/styles.css')
	body
		center
			h1= title

			select(id='season')
				each opt in seasons
					option(value=opt.val selected=opt.selected) #{opt.text} Season
					

		.clearfix.desktop
			each conf in confs
				each round, roundNum in bracket
					div(class='col ' + conf.toLowerCase() + ' ' + roundNum)
						each series, index in round
							if (series.confName === conf)
								+box(series, teams, roundNum, index)

		.mobile
			each round, roundNum in bracket
				h1= roundNum === 'finals' ? 'Finals!!!' : 'Round ' + roundNum.charAt(0).toUpperCase() + roundNum.substr(1)
				each series, index in round
					+box(series, teams, roundNum, conf, true)

		.footer
			a.upcoming(href='https://stats.nba.com/schedule/' target="_blank") View Upcoming Games
			.last-updated 
				p
					span.created-by 
						| Created by Cole Hafner 
						a(href=`https://github.com/coleHafner/nba-playoff-bracket/commit/${version}` target="_blank") version #{version.substr(0, 7)}
				if (isLatestSeason)
					| Updated #{lastUpdated.prettyString} &nbsp;
					a.refresh(href='/?hardRefresh=1') Refresh
		
		script.
			const season = document.getElementById('season');

			season.onchange = () => {
				window.location = `/?season=${season.options[season.selectedIndex].value}`;
			};
